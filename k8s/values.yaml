replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
ingress:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

mainService:
  name: main
  image:
    repository: fenkss/main-ukpktest
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/mixail/projects/k8s-ukpktest/main/app"
  database: ukpktest
  env:
    - name: DATABASE_URL
      key: MAIN_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

assets:
  name: assets
  image:
    repository: fenkss/assets-ukpktest
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/mixail/projects/k8s-ukpktest/assets/assets"

logtail:
  name: main
  image:
    repository: fenkss/main-ukpktest
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/mixail/projects/k8s-ukpktest/logtail/app"
  database: logtail
  env:
    - name: DATABASE_URL
      key: MAIN_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

authService:
  name: auth
  image:
    repository: fenkss/auth-ukpktest
    tag: "latest"
    pullPolicy: Never
  type: ClusterIP
  port: 80
  develop:
    enabled: true
    pwd: "/hosthome/mixail/projects/k8s-ukpktest/auth/app"
  database: auth
  env:
    - name: DATABASE_URL
      key: AUTH_DATABASE_URL
    - name: KAFKA_URL
      key: KAFKA_URL

mysql:
  fullnameOverride: "ukpktest-mysql"
  auth:
    password: "1"
    rootPassword: "1"
    username: "ukpktest"

traefik:
  providers:
    kubernetesIngress:
      enabled: false # Настраиваем маршруты только с помощью CRD (IngressRoute)
  ports:
    websecure:
      expose: false # Выключаем https
  logs:
    access:
      enabled: true
    general:
      level: DEBUG

  metrics:
    prometheus:
      buckets:
        - 0.1
        - 0.3
        - 1.2
        - 5.0
      entryPoint: metrics
      addEntryPointsLabels: true
      addServiceLabels: true
      manualRouting: true
  additionalArguments: [
    "--metrics.prometheus=true",
    "--metrics.prometheus.entryPoint=metrics",
    "--entryPoints.metrics.address=:8082",
  ]


kafka:
  fullnameOverride: "ukpktest-kafka"
  zookeeper:
  autoCreateTopicsEnable: true
  provisioning:
    topics: [ 'logtail' ]
  auth:
    sasl:
      jaas:
        clientPasswords: [
          123
        ]

kafkaTopicCreator:
  jobName: ukpktest-kafka-topic-creator
  helmHook: post-install
  kafka:
    topics:
      - name: logtail
        replicationFactor: 1
        partitions: 1
  zookeeper:
    address: ukpktest-zookeeper:2181
  imagePullSecrets:
    - name: regcred

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector: {}
